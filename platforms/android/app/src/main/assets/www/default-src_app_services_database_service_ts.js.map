{"version":3,"sources":["./src/app/services/database.service.ts"],"names":[],"mappings":"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","file":"default-src_app_services_database_service_ts.js","sourcesContent":["import { Platform } from '@ionic/angular';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { SQLitePorter } from '@ionic-native/sqlite-porter/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { promise } from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  private database: SQLiteObject;\n  private dbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  items = new BehaviorSubject([]);\n  order = new BehaviorSubject([]);\n  no_pendorder: number;\n  no_comporder: number;\n  no_cancorder: number;\n\n  @Output() updateItemEvent = new EventEmitter<string>();\n\n  constructor(private plt: Platform, private sqlitePorter: SQLitePorter, private sqlite: SQLite, private http: HttpClient) {\n    this.plt.ready().then(() => {\n      this.sqlite\n        .create({\n          name: \"ezcomm\",\n          location: \"default\",\n        })\n        .then((db: SQLiteObject) => {\n          this.database = db;\n          this.seedDatabase();\n        });\n    });\n  }\n\n    seedDatabase() {\n      this.http.get('assets/seed.sql', { responseType: 'text' })\n      .subscribe(sql => {\n        this.sqlitePorter.importSqlToDb(this.database, sql)\n        .then((_) => {\n          this.loadItems();\n          this.loadOrders();\n          this.dbReady.next(true);\n        })\n        .catch(e => console.log(e));\n      });\n    }\n\n    getDatabaseState() {\n      return this.dbReady.asObservable();\n    }\n\n    getItems(): Observable<any[]> {\n      return this.items.asObservable();\n    }\n\n    getOrders(): Observable<any[]> {\n      return this.order.asObservable();\n    }\n\n// Items database\n    loadItems() {\n      return this.database.executeSql('SELECT * FROM items', []).then(data => {\n        let items = [];\n\n        if(data.rows.length > 0) {\n          for (var i=0; i<data.rows.length; i++) {\n            items.push({\n              items_id: data.rows.item(i).items_id,\n              name: data.rows.item(i).name,\n              price: data.rows.item(i).price,\n              stock: data.rows.item(i).stock,\n              min_purc: data.rows.item(i).min_purc,\n              promo_price: data.rows.item(i).promo_price,\n              image: data.rows.item(i).image,\n              created_date: data.rows.item(i).created_date,\n            });\n          }\n        }\n        this.items.next(items);\n      });\n    }\n\n    getItem(id): Promise<any> {\n      return this.database\n        .executeSql(\n          \"SELECT * FROM items WHERE items_id = ?\", [id])\n        .then((data) => {\n          if (data == null) {\n            return {\n              items_id: 0,\n            };\n          }\n          return {\n            items_id: data.rows.item(0).items_id,\n            name: data.rows.item(0).name,\n            price: parseFloat(data.rows.item(0).price).toFixed(2),\n            stock: data.rows.item(0).stock,\n            min_purc: data.rows.item(0).min_purc,\n            promo_price: parseFloat(data.rows.item(0).promo_price).toFixed(2),\n            image: data.rows.item(0).image,\n            created_date: data.rows.item(0).created_date\n          };\n        });\n    }\n\n    deleteItems(id) {\n      return this.database\n      .executeSql(\"DELETE FROM items WHERE items_id = ?\", [id])\n      .then((_) => {\n        this.loadItems();\n      });\n    }\n\n    addItems(itemobj) {\n      console.log(\"itemobj\");\n      let data = [itemobj.name, itemobj.price, itemobj.stock, itemobj.min_purc, itemobj.promo, itemobj.img, itemobj.date];\n      return this.database\n      .executeSql(\n        'INSERT INTO items (name, price, stock, min_purc, promo_price, image, created_date) VALUES (?, ?, ?, ?, ?, ?, ?)',\n        data)\n      .then((data) => {\n        console.log(data);\n        this.loadItems();\n        return(data);\n      })\n      .catch((e) => {\n        return \"Error in addItems\" + JSON.stringify(e);\n      });\n    }\n\n    updateItems(itemobj) {\n      let obj = [itemobj.name, itemobj.price, itemobj.stock, itemobj.min_purc, itemobj.promo, itemobj.img];\n      return this.database\n        .executeSql(\n          `UPDATE items SET name = ?, price = ?, stock = ?, min_purc = ?, promo_price = ?, image = ? WHERE items_id = ${itemobj.id}`,\n          obj\n        )\n        .then(data => {\n          this.loadItems();\n          this.updateItemEvent.emit();\n        })\n        .catch((e) => {\n          return \"Error in updateItems\" + JSON.stringify(e);\n        });\n    }\n\n// Order database\n    loadOrders() {\n      return this.database.executeSql(\n        'SELECT o.*, i.name, i.stock, i.price, i.min_purc, i.promo_price, i.image FROM orders o LEFT JOIN items i ON i.items_id = o.items_id',\n        [])\n        .then((data) => {\n        let order = [];\n\n        if(data.rows.length > 0) {\n          for (var i=0; i<data.rows.length; i++) {\n            order.push({\n              order_id: data.rows.item(i).order_id,\n              items_id: data.rows.item(i).items_id,\n              qty: data.rows.item(i).qty,\n              amount: data.rows.item(i).amount,\n              cus_name: data.rows.item(i).cus_name,\n              cus_tel: data.rows.item(i).cus_tel,\n              cus_address: data.rows.item(i).cus_address,\n              shipping_no: data.rows.item(i).shipping_no,\n              order_date: data.rows.item(i).order_date,\n              status: data.rows.item(i).status,\n            });\n          }\n        }\n        this.order.next(order);\n      });\n    }\n\n    buffOrders(status): Promise<any> {\n      return this.database\n      .executeSql(\n        \"SELECT o.*, i.name, i.stock, i.price, i.min_purc, i.promo_price, i.image FROM orders o WHERE o.status = ? LEFT JOIN items i ON i.items_id = o.items_id\", \n        [status])\n      .then((data) => {\n        let order = [];\n        console.log(\"service \", data);\n\n        if(data.rows.length > 0) {\n          for (var i=0; i<data.rows.length; i++) {\n            order.push({\n              order_id: data.rows.item(i).order_id,\n              items_id: data.rows.item(i).items_id,\n              qty: data.rows.item(i).qty,\n              amount: data.rows.item(i).amount,\n              cus_name: data.rows.item(i).cus_name,\n              cus_tel: data.rows.item(i).cus_tel,\n              cus_address: data.rows.item(i).cus_address,\n              shipping_no: data.rows.item(i).shipping_no,\n              order_date: data.rows.item(i).order_date,\n              status: data.rows.item(i).status,\n              item_name: data.rows.item(i).name,\n              item_stock: data.rows.item(i).stock,\n              item_price: data.rows.item(i).price,\n              item_min: data.rows.item(i).min_purc,\n              item_promo: data.rows.item(i).promo_price,\n              item_img: data.rows.item(i).image,\n            });\n          }\n        }\n\n        return order;\n      });\n    }\n\n    getOrder(id) {\n      return this.database.executeSql(\n        \"SELECT o.*, i.name, i.stock, i.price, i.min_purc, i.promo_price, i.image FROM orders o WHERE o.order_id = ? LEFT JOIN items i ON i.items_id = o.items_id\", [id])\n      .then((data) => {\n        if(data == null) {\n          return {\n            order_id: 0,\n          };\n        } \n        return {\n          order_id: data.rows.item(0).order_id,\n          items_id: data.rows.item(0).items_id,\n          qty: data.rows.item(0).qty,\n          amount: data.rows.item(0).amount,\n          cus_name: data.rows.item(0).cus_name,\n          cus_tel: data.rows.item(0).cus_tel,\n          cus_address: data.rows.item(0).cus_address,\n          shipping_no: data.rows.item(0).shipping_no,\n          order_date: data.rows.item(0).order_date,\n          status: data.rows.item(0).status,\n          item_name: data.rows.item(0).name,\n          item_stock: data.rows.item(0).stock,\n          item_price: data.rows.item(0).price,\n          item_min: data.rows.item(0).min_purc,\n          item_promo: data.rows.item(0).promo_price,\n          item_img: data.rows.item(0).image,\n        };\n      });\n    }\n\n    updateStatus(id, status) {\n      return this.database\n      .executeSql(\"UPDATE orders SET status = ? WHERE items_id = ?\", [status, id])\n      .then((_) => {\n        this.loadOrders();\n      });\n    }\n\n    addOrder(orderobj, dumpdata) {\n      let data = [\n        orderobj.items_id, orderobj.qty, orderobj.order_date,\n        orderobj.amount, orderobj.cus_name, orderobj.cus_tel,\n        orderobj.cus_address, orderobj.shipping_no, orderobj.status\n      ];\n      return this.database\n      .executeSql(\n        'INSERT INTO orders (items_id, qty, order_date, amount, cus_name, cus_tel, cus_address, shipping_no, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)',\n        data)\n      .then((data) => {\n        this.loadOrders();\n        this.updateStock(dumpdata);\n        return(data);\n      })\n      .catch((e) => {\n        return \"Error in addOrder\" + JSON.stringify(e);\n      });\n    }\n\n    updateStock(dumpdata) {\n      console.log(dumpdata);\n    }\n\n    updateOrder(orderobj, dumpdata) {\n\n      if(dumpdata.length!=0 || dumpdata.length!=null)\n      {\n        this.updateStock(dumpdata);\n      }\n\n      let data = [orderobj.items_id, \n        orderobj.qty, orderobj.amount, \n        orderobj.cus_name, orderobj.cus_tel, \n        orderobj.cus_address, orderobj.shipping_no, \n        orderobj.order_date, orderobj.status\n      ];\n      return this.database\n      .executeSql(\n        `UPDATE orders SET items_id = ?, qty = ?, amount = ?, cus_name = ?, cus_tel = ?, cus_address = ?, shipping_no = ?, order_date =?, status = ? WHERE order_id = ${orderobj.id}`,\n        data)\n      .then((data) => {\n        this.loadOrders();\n        this.updateItemEvent.emit();\n      })\n      .catch((e) => {\n        return \"Error in updateOrder\" + JSON.stringify(e);\n      });\n    }\n\n    getDate(): string\n    {\n      let date_ob = new Date();\n      // adjust 0 before single digit date\n      let date = (\"0\" + date_ob.getDate()).slice(-2);\n      // current month\n      let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n      // current year\n      let year = date_ob.getFullYear();\n      // current hours\n      let hours = (\"0\" + date_ob.getHours()).slice(-2);\n      // current minutes\n      let minutes = (\"0\" + date_ob.getMinutes()).slice(-2);\n      // current seconds\n      let seconds = (\"0\" + date_ob.getSeconds()).slice(-2);\n      // prints date & time in YYYY-MM-DD HH:MM:SS format\n      return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}`;\n    }\n\n  }\n"],"sourceRoot":"webpack:///"}